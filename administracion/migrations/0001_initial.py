# Generated by Django 5.0.2 on 2024-05-16 02:36

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Articulo',
            fields=[
                ('id_articulo', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_articulo', models.CharField(max_length=45)),
                ('descripcion_articulo', models.CharField(max_length=345)),
            ],
            options={
                'db_table': 'articulo',
                'db_table_comment': 'Esta entidad se crea con el objetivo de mantener un registro de todos los articulos que hay en la tienda, teniendo en cuenta sus caracteristicas ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cabeza',
            fields=[
                ('id_cabeza', models.AutoField(primary_key=True, serialize=False)),
                ('id_persona', models.CharField(max_length=45)),
                ('fecha', models.DateField()),
                ('valor_total', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'cabeza',
                'db_table_comment': 'Esta entidad se crea con el objetivo de visualizar la informacion basica de la tienda, el vendedor, y el comprador',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id_categoria', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_categoria', models.CharField(max_length=45)),
                ('descipcion_categoria', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'categoria',
                'db_table_comment': 'Esta entidad se crea con el objetivo de clasificar cada articulo en categorias y a su vez  generar un filtro de busqueda que ayude al usuario o vendedor a encontrar el articulo facilmente ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cuerpo',
            fields=[
                ('id_cuerpo', models.AutoField(primary_key=True, serialize=False)),
                ('cantidad', models.IntegerField()),
                ('valor_total_cuerpo', models.DecimalField(decimal_places=0, max_digits=10)),
            ],
            options={
                'db_table': 'cuerpo',
                'db_table_comment': 'Esta entidad se crea con el objetivo de poder registrar los articulos seleccionados por el cliente los cuales seran proximos a ser comprados o ya fueron comprados.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id_departamento', models.AutoField(primary_key=True, serialize=False)),
                ('departamento', models.CharField(max_length=45)),
                ('descripcion_departamento', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'departamento',
                'db_table_comment': 'Esta entidad se crea con el objetivo de determinar la procedencia por departamentos, o en su defecto dictaminar hacia que punto van dirijido los pedidos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id_empresa', models.AutoField(primary_key=True, serialize=False)),
                ('razon_social', models.CharField(max_length=45)),
                ('nit', models.CharField(db_column='Nit', max_length=45)),
                ('direccion', models.CharField(max_length=45)),
                ('telefonoemp', models.IntegerField()),
                ('correo', models.CharField(max_length=45)),
                ('empresacol', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'empresa',
                'db_table_comment': 'Esta entidad se crea con el objetivo de poder mantener un registro de todos los clientes,en el dicho caso de que este identifique como empresa ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Imagen',
            fields=[
                ('id_imagen', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=255)),
                ('descripcion', models.CharField(max_length=345)),
            ],
            options={
                'db_table': 'imagen',
                'db_table_comment': 'Esta entidad se crea con el objetivo de mantener un registro de todos los articulos que hay en la tienda, teniendo en cuenta sus caracteristicas ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetodoPago',
            fields=[
                ('id_metodo_pago', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_metodo', models.CharField(max_length=45)),
                ('descripcion_metodo', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'metodo_pago',
                'db_table_comment': 'Esta entidad se crea con el objetivo de llevar acabo una eleccion de los diferentes metodos de pago disponibles segun la facilidad del cliente ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Movimiento',
            fields=[
                ('id_movimiento', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_movimiento', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'movimiento',
                'db_table_comment': 'Esta entidad se crea con el objetivo de ver los movimientos de salida y entrada de articulos al stock ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id_municipio', models.AutoField(primary_key=True, serialize=False)),
                ('municipio', models.CharField(max_length=45)),
                ('codigo_municipio', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'municipio',
                'db_table_comment': 'Esta entidad se crea con el objetivo de determinar la procedencia por municipios, o en su defecto dictaminar hacia que punto van dirijido los pedidos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id_stock', models.AutoField(primary_key=True, serialize=False)),
                ('cantidad_actual', models.IntegerField()),
                ('valor_compra', models.DecimalField(decimal_places=0, max_digits=10)),
                ('valor_venta', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('utilidad', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'stock',
                'db_table_comment': 'Esta entidad se crea con el objetivo de llevar un inventario de los articulos que se encunetran disponibles y su valor unitario de compra y venta ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('idtipo_documento', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'tipo_documento',
                'db_table_comment': 'Esta entidad se crea con el objetivo de diferenciar los tipos de factura que se puedan tener, como: factura de venta, factura de compra, orden de pedido.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TipoIdentificacion',
            fields=[
                ('id_tipo_identificacion', models.AutoField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(max_length=45)),
                ('descripcion', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'tipo_identificacion',
                'db_table_comment': 'tabla diseñada con el fin de identificar si la persona que se registra  es extrajera, nacional,',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TipoPersona',
            fields=[
                ('id_tipo_persona', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, max_length=45, null=True)),
                ('descripcion', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'tipo_persona',
                'db_table_comment': 'tabla diseñada con el fin de identificar si la persona que se registra juridica o natural.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UnidadDeMedida',
            fields=[
                ('idunidad_de_medida', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=45)),
                ('descripcion', models.CharField(max_length=145)),
            ],
            options={
                'db_table': 'unidad_de_medida',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'myuser',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id_persona', models.IntegerField(primary_key=True, serialize=False)),
                ('primer_nombre', models.CharField(max_length=50)),
                ('segundo_nombre', models.CharField(max_length=45)),
                ('primer_apellido', models.CharField(max_length=50)),
                ('segundo_apellido', models.CharField(max_length=45)),
                ('identificacion', models.CharField(max_length=45)),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('telefono', models.CharField(max_length=45)),
                ('correo_institucional', models.CharField(max_length=70)),
                ('direccion', models.CharField(max_length=45)),
                ('foto', models.ImageField(null=True, upload_to='img/')),
            ],
            options={
                'db_table': 'persona',
                'managed': True,
            },
        ),
    ]
